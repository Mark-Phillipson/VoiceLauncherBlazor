@page "/talon-voice-command-search"
@using DataAccessLibrary.Models
@using Microsoft.AspNetCore.Components


<div class="container mt-4">
    <h2>Talon Voice Command Search</h2>    <form class="mb-3" @onsubmit="OnSearch" @onsubmit:preventDefault="true">        <div class="input-group mb-2">            <input @ref="searchInput" class="form-control" type="text" placeholder="Search commands or scripts... (Alt+S)" @bind="SearchTerm" @bind:event="oninput" @onblur="OnSearchInputBlur" @onkeyup="OnSearchInputKeyUp" aria-label="Search" disabled="@IsLoading" accesskey="s" />            <button class="btn btn-primary" type="submit" aria-label="Search" disabled="@IsLoading" accesskey="e">
                @if (IsLoading)
                {
                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                    <span>Searching...</span>
                }
                else
                {
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search me-2" viewBox="0 0 16 16">
                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                    </svg>
                    <span>S<u>e</u>arch</span>
                }
            </button>
        </div>        <div class="form-check form-switch mb-2">
            <input class="form-check-input" type="checkbox" id="semanticToggle" @onchange="OnSemanticToggleChange" disabled="@IsLoading" checked="@UseSemanticMatching" accesskey="n" />
            <label class="form-check-label" for="semanticToggle">@((MarkupString)"Sema<u>n</u>tic Search")</label>
        </div><div class="row mb-2">            <div class="col-md-3">
                <label class="form-label small label-application">Filter by <span class="underline-application">A</span>pplication:</label><select class="form-select form-select-sm" @onchange="OnApplicationFilterChange" aria-label="Filter by Application" disabled="@IsLoading" value="@SelectedApplication" accesskey="a">
                    <option value="">All Applications</option>
                    @if (AvailableApplications != null)
                    {
                        @foreach (var app in AvailableApplications)
                        {
                            <option value="@app">@app</option>
                        }
                    }
                </select>
            </div>            <div class="col-md-3">
                <label class="form-label small label-mode">Filter by <span class="underline-mode">M</span>ode:</label><select class="form-select form-select-sm filter-mode" @onchange="OnModeFilterChange" aria-label="Filter by Mode" disabled="@IsLoading" value="@SelectedMode" accesskey="m">
                    <option value="">All Modes</option>
                    @if (AvailableModes != null)
                    {
                        @foreach (var mode in AvailableModes)
                        {
                            <option value="@mode">@mode</option>
                        }
                    }
                </select>
            </div>            <div class="col-md-3">
                <label class="form-label small label-tags">Filter by <span class="underline-tags">T</span>ags:</label><select class="form-select form-select-sm filter-tags" @onchange="OnTagsFilterChange" aria-label="Filter by Tags" disabled="@IsLoading" value="@SelectedTags" accesskey="t">
                    <option value="">All Tags</option>
                    @if (AvailableTags != null)
                    {
                        @foreach (var tag in AvailableTags)
                        {
                            <option value="@tag">@tag</option>
                        }
                    }
                </select>
            </div>            <div class="col-md-3">
                <label class="form-label small label-os">Filter by <span class="underline-os">O</span>S:</label><select class="form-select form-select-sm filter-os" @onchange="OnOSFilterChange" aria-label="Filter by Operating System" disabled="@IsLoading" value="@SelectedOperatingSystem" accesskey="o">
                    <option value="">All Operating Systems</option>
                    @if (AvailableOperatingSystems != null)
                    {
                        @foreach (var os in AvailableOperatingSystems)
                        {
                            <option value="@os">@os</option>
                        }
                    }
                </select>
            </div>
        </div>        <div class="row mb-2">            <div class="col-md-3">
                <label class="form-label small label-repository">Filter by <span class="underline-repository">R</span>epository:</label><select class="form-select form-select-sm filter-repository" @onchange="OnRepositoryFilterChange" aria-label="Filter by Repository" disabled="@IsLoading" value="@SelectedRepository" accesskey="r">
                    <option value="">All Repositories</option>
                    @if (AvailableRepositories != null)
                    {
                        @foreach (var repo in AvailableRepositories)
                        {
                            <option value="@repo">@repo</option>
                        }
                    }
                </select>
            </div><div class="col-md-9 d-flex align-items-end justify-content-between">                <div>                    <button class="btn btn-outline-secondary btn-sm me-2" @onclick="ClearFilters" type="button" disabled="@IsLoading" accesskey="c">
                        @if (IsLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                            <span>Clearing...</span>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle me-2" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                <path d="m4.646 4.646.708.708L8 8l2.646-2.646.708.708L8.708 8.5l2.647 2.646-.708.708L8 9.207l-2.646 2.647-.708-.708L7.293 8.5 4.646 5.854z"/>
                            </svg>
                            <span><u>C</u>lear Filters</span>
                        }
                    </button>                    <button class="btn btn-outline-primary btn-sm" @onclick="RefreshFiltersAsync" type="button" disabled="@IsLoading" accesskey="f">
                        @if (IsLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                            <span>Refreshing...</span>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise me-2" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z"/>
                                <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z"/>
                            </svg>
                            <span>Re<u>f</u>resh Filters</span>
                        }
                    </button>
                </div>
                @if (Results?.Any() == true)
                {
                    <div>
                        <span class="badge bg-info fs-6">
                            @Results.Count @(Results.Count == 1 ? "result" : "results") found
                        </span>
                    </div>
                }
            </div>        </div></form>

    <div>
        @if (IsLoading)
        {
            <div class="d-flex justify-content-center align-items-center py-5" role="status" aria-live="polite">
                <div class="spinner-border text-primary me-3" role="status" aria-hidden="true">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <span class="text-muted">Searching Talon voice commands...</span>
            </div>
        }
        else if (Results?.Any() == true)
        {
            <div class="row" aria-label="Search Results">
                @foreach (var cmd in Results)
                {
                    <div class="col-12 col-lg-6 col-xl-4 mb-3">
                        <div class="card h-100" tabindex="0">                            <div class="card-header">
                                <h5 class="card-title mb-1">@cmd.Command</h5>
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <small class="text-muted">@cmd.Application</small>                                    <div class="d-flex gap-1">                                        @if (!string.IsNullOrWhiteSpace(cmd.Mode))
                                        {
                                            <span class="badge bg-secondary badge-with-underline badge-mode" title="Filter by Mode (Alt+M)">@cmd.Mode</span>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(cmd.Tags))
                                        {
                                            @foreach (var tag in cmd.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(t => t.Trim()))
                                            {
                                                <span class="badge bg-warning text-dark badge-with-underline badge-tags" title="Filter by Tags (Alt+T)">@tag</span>
                                            }
                                        }
                                        @if (!string.IsNullOrWhiteSpace(cmd.OperatingSystem))
                                        {
                                            <span class="badge bg-info badge-with-underline badge-os" title="Filter by OS (Alt+O)">@cmd.OperatingSystem</span>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(cmd.Repository))
                                        {
                                            <span class="badge bg-primary badge-with-underline badge-repository" title="Filter by Repository (Alt+R)">@cmd.Repository</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">                                <div class="mb-3">
                                    <h6 class="card-subtitle text-muted">Script:</h6>
                                    <pre class="card-text script-content p-2 rounded border">@GetTrimmedScript(cmd.Script)</pre>
                                </div>
                                <div class="d-flex justify-content-between align-items-center">
                                    @if (!string.IsNullOrWhiteSpace(cmd.FilePath))
                                    {                                        <button class="btn btn-outline-primary btn-sm" 
                                                @onclick="(e) => OnFilePathClick(e, cmd.FilePath)" 
                                                title="Open @cmd.FilePath in VS Code"
                                                aria-label="Open @GetFileName(cmd.FilePath) in VS Code">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-code" viewBox="0 0 16 16">
                                                <path d="M6.854 4.646a.5.5 0 0 1 0 .708L4.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0zM9.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L11.793 8 9.146 5.354a.5.5 0 0 1 0-.708z"/>
                                                <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H2zm0 1h12v12H2V2z"/>
                                            </svg> @GetFileName(cmd.FilePath)
                                        </button>
                                    }
                                    <small class="text-muted">@cmd.CreatedAt.ToLocalTime().ToString("g")</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else if (HasSearched)
        {
            <div class="alert alert-info" role="alert">No results found.</div>
        }
    </div>
</div>

@code {
    // All logic is in the code-behind file (partial class)
}
