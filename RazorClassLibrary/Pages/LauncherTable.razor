@page "/launcherstable/{CategoryID:int}"
<PageTitle>Launchers</PageTitle>
<div class="row align-items-center">
    @if (!RunningInBlazorHybrid && string.IsNullOrWhiteSpace(GlobalSearchTerm))
    {
        <div class="col-auto d-flex align-items-center">
            <h2 class="mb-0 me-4">@Title</h2>
            <div class="me-4">
                <button class="btn btn-md btn-outline-warning me-2" @onclick="@(() => SortLauncher("Name"))">
                    <i class="fas fa-sort-alpha-up"></i>
                </button>
                <button class="btn btn-md btn-outline-warning me-4" @onclick="@(() => SortLauncher("Name Desc"))">
                    <i class="fas fa-sort-alpha-up-alt"></i>
                </button>
            </div>
            <button class="btn btn-md btn-outline-danger me-4" type="button" @onclick="@( ( ) => LoadData( ) )">
                <i class="fa-solid fa-arrows-rotate"></i>
            </button>
        </div>
    }
    else
    {
        @if (!string.IsNullOrWhiteSpace(GlobalSearchTerm))
        {
            <div class="col-md-12">
                <div class="text-center text-info">
                    <text>Launch Search Results: @GlobalSearchTerm </text>
                </div>
            </div>
        }
    }
    <div class="col-auto me-4">
        @if (string.IsNullOrWhiteSpace(GlobalSearchTerm))
        {
            <InputSelect accesskey='1' ValueExpression="@(()=>CategoryId)" id='CategoryId' Value="@CategoryId"
                ValueChanged="@(( int  value) => OnCategorySelectedAsync(value))" class="form-select">
                <option value="">Select Category (Alt+1)</option>
                @foreach (var item in _categories)
                {
                    <option style="font-size:xx-large" value="@item.Id">@item.CategoryName </option>
                }
            </InputSelect>
        }
    </div>
    @if (!RunningInBlazorHybrid && string.IsNullOrWhiteSpace(GlobalSearchTerm))
    {
        <div class="col-auto me-4">
            <button accesskey="+" @onclick="AddNewLauncherAsync" class="btn btn-md btn-outline-success">
                Add (<i class="fas fa-plus"></i>)
            </button>
        </div>
    }

    @if (string.IsNullOrWhiteSpace(GlobalSearchTerm))
    {
        <div class="col-auto me-4">
            <input @ref="SearchInput" accesskey="3" class="form-control" style="width: 200px;" @bind="@SearchTerm"
                @bind:event="oninput" id="SearchInput" name="SearchTerm" placeholder="Filter (Alt+3)" />
        </div>
        <div class="col-auto">
            <button class='btn btn-md btn-outline-info' @onclick="() => LoadData(true)">
                @if (!RunningInBlazorHybrid) { 
                    <i class="bi bi-arrow-clockwise"></i>
                }
                else
                {
                    <label>Clear Filter and Load Data</label>
                }
            </button>
        </div>
    }
</div>
<hr class="my-2" />
@if (Message.Length > 0)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Please Note!</strong> @Message
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (FilteredLauncherDTO == null && _loadFailed == true)
{
    <h2 class="text-danger">The data failed to load please try again in a little while..</h2>
    <button class="btn btn-md btn-danger" type="button" @onclick="@( () => LoadData() )">Reload</button>
    <h6 class="text-danger">@ExceptionMessage</h6>
}
else if (FilteredLauncherDTO == null)
{
    <div style="display:normal;margin:auto" class="loader"></div>
}
else if (FilteredLauncherDTO.Count == 0)
{
    <p>No Launcher match the criteria @GlobalSearchTerm</p>
    <button @onclick="AddNewLauncherAsync" class="btn btn-md btn-success">Add Record <i class="fas fa-plus"></i></button>
}
else
{
    <div class="layout-as-cards">
        @{
            alphabetCounter = 0;
        }
        @foreach (var launcher in FilteredLauncherDTO)
        {
            alphabetCounter++;
            currentLetter = Alphabet.AlphabetList?.Where(x => x.Id == alphabetCounter).FirstOrDefault()?.Letter;
            @if (launcher.CommandLine.ToLower().StartsWith("http"))
            {                <div class="card m-1">
                    <a title="Launch Application or Website" accesskey="@currentLetter" class="btn btn-outline-success" target="_blank" href="@launcher.CommandLine">
                        @if (launcher.Icon != null && launcher.Icon.Length > 0)
                        {
                            var iconSrc = launcher.Icon.StartsWith("http", StringComparison.OrdinalIgnoreCase)
                                ? launcher.Icon
                                : $"/images/{launcher.Icon}";
                            <img alt='Icon' src='@iconSrc' class="mb-2" />
                        }
                        else
                        {
                            <i class="fa-solid fa-rocket mb-2"></i>
                        }
                        <span><u>@currentLetter</u> @launcher.Name</span>
                    </a>
                    @if (!RunningInBlazorHybrid)
                    {
                        <div class="btn-group">
                            <button title='Edit Launcher' class="btn-narrow btn btn-md btn-outline-warning"
                                @onclick="@(() => EditLauncherAsync(launcher.Id))">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button title='Delete Launcher' class="btn-narrow btn btn-md btn-outline-danger"
                                @onclick="@(() => DeleteLauncherAsync(launcher.Id))">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    }
                </div>
            }
            else
            {                <div class="card m-1">
                    <button title='Launch Application or Website' accesskey="@currentLetter"
                        class="btn btn-outline-success" type="button"
                        @onclick="@( ( ) => ProcessLaunching(launcher.Id  ) )">
                        @if (launcher.Icon != null && launcher.Icon.Length > 0)
                        {
                            var iconSrc = launcher.Icon.StartsWith("http", StringComparison.OrdinalIgnoreCase)
                                ? launcher.Icon
                                : $"/images/{launcher.Icon}";
                            <img alt='Icon' src='@iconSrc' class="mb-2" />
                        }
                        else
                        {
                            <i class="fa-solid fa-rocket mb-2"></i>
                        }
                        <span><u>@currentLetter</u> @launcher.Name</span>
                    </button>
                    @if (!RunningInBlazorHybrid)
                    {
                        <div class="btn-group">
                            <button title='Edit Launcher' class="btn-narrow btn btn-md btn-outline-warning"
                                @onclick="@(() => EditLauncherAsync(launcher.Id))">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button title='Delete Launcher' class="btn-narrow btn btn-md btn-outline-danger"
                                @onclick="@(() => DeleteLauncherAsync(launcher.Id))">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    }
                </div>
            }
        }
    </div>
}
