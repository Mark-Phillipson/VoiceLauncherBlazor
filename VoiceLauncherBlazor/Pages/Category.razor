@page "/category/{categoryId:int}";
@using VoiceLauncherBlazor.Data
@using VoiceLauncherBlazor.Models
@inject VoiceLauncherService VoiceLauncherService
@inject NavigationManager NavigationManager

<h1>Category
    <small>
        @if (category!= null )
        {
            @if (category.CategoryType=="Launch Applications")
            {
                <text> Launcher </text>
            }
            else
            {
                <text> Language </text>
            }
                @category.CategoryName
        }
    </small>
    </h1>
@if (category == null)
{
    <text>Loading.</text>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="@category" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                @*<ValidationSummary />*@
                <div class="form-field row">
                    <label class="col-md-4">Id</label>
                    @if (category.Id > 0)
                    {
                        <div class="col-md-8">@category.Id</div>
                    }
                    <input type="hidden" name="Id" id="Id" value="@category.Id" />
                </div>
                <div class="form-field row">
                    <label for="@category.CategoryName" class="col-md-4"> Category Name (0)</label>
                    <InputText class="col-md-8 form-control-lg" placeholder="Enter Category Name, must be unique" accesskey="0" id="CategoryName" @bind-Value="category.CategoryName"></InputText>
                    <ValidationMessage For="@(() => category.CategoryName)" />
                </div>
                <div class="form-field row">
                    <label for="@category.CategoryType" class="col-md-4"> Category Type (1)</label>
                    <InputSelect accesskey="1" class="form-control-lg col-md-8" @bind-Value="category.CategoryType" >
                        <option value="">-</option>
                        @if (generalLookups!= null)
                        {
                            @foreach (var lookup in generalLookups)
                            {
                                @if (category.CategoryType==lookup.ItemValue)
                                {
                                    <option selected value="@lookup.ItemValue">@lookup.ItemValue</option>
                                }
                                else
                                {
                                    <option value="@lookup.ItemValue">@lookup.ItemValue</option>
                                }
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => category.CategoryType)" />
                </div>
                <button accesskey="2" class="btn btn-lg btn-success" type="submit">Submit (2) <i class="oi oi-hard-drive"></i></button>
            </EditForm>
        </div>
    </div>
    <hr>
    @if (category.CategoryType=="IntelliSense Command")
    {
        <CustomIntellisenseList category=@category/>
    }
    else
    {
        <LauncherList category="@category" />
    }
}

@code {
        [Parameter] public int categoryId { get; set; }
    private EditContext _editContext;
    public VoiceLauncherBlazor.Models.Category category { get; set; }
    public List<VoiceLauncherBlazor.Models.GeneralLookup> generalLookups { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if (categoryId > 0)
        {
            category = await VoiceLauncherService.GetCategoryAsync(categoryId);
        }
        else
        {
            category = new Models.Category
            {
                CategoryType = "IntelliSense Command"
            };
        }
        _editContext = new EditContext(category);
        generalLookups =  await VoiceLauncherService.GetGeneralLookUpsAsync("Category Types");
    }

    protected override async Task OnParametersSetAsync()
    {
        if (categoryId > 0)
        {
            category = await VoiceLauncherService.GetCategoryAsync(categoryId);
        }
    }

    private async Task HandleValidSubmit()
    {
        var result = await VoiceLauncherService.SaveCategory(category);
        NavigationManager.NavigateTo("categories");
    }


}


