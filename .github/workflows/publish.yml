name: Publish Releases

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win-x64
            ext: .exe
          - os: macos-latest
            runtime: osx-x64
            ext: ''
          - os: ubuntu-latest
            runtime: linux-x64
            ext: ''

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
    - name: Restore dependencies
      run: dotnet restore TalonVoiceCommandsServer/
    - name: Publish
      run: |
        dotnet publish TalonVoiceCommandsServer/ --configuration Release --self-contained true --runtime ${{ matrix.runtime }} --output TalonVoiceCommandsServer/publish/${{ matrix.runtime }}

    - name: Package artifact
      shell: bash
      run: |
        set -eux
        cd TalonVoiceCommandsServer/publish
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          powershell -Command "Compress-Archive -Path .\${{ matrix.runtime }}\* -DestinationPath ../../VoiceLauncherBlazor-${{ matrix.runtime }}.zip"
        else
          tar -czf ../../VoiceLauncherBlazor-${{ matrix.runtime }}.tar.gz ./${{ matrix.runtime }}
        fi

    - name: Upload packaged artifact
      uses: actions/upload-artifact@v4
      with:
        name: VoiceLauncherBlazor-${{ matrix.runtime }}
        path: |
          VoiceLauncherBlazor-${{ matrix.runtime }}.zip
          VoiceLauncherBlazor-${{ matrix.runtime }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}