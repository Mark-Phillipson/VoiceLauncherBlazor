@page "/intellisenses"
@page "/intellisensesC/{categoryIdFilter:int}"
@page "/intellisensesL/{languageIdFilter:int}"
@page "/intellisensesBoth/{languageIdFilter:int}/{categoryIdFilter:int}"
<header class="form-inline mx-1">
	<h4 style="display:inline-block">
		Custom IntelliSenses
	</h4>
	@if (!string.IsNullOrWhiteSpace(SearchTerm))
	{
		<span class="mx-1"> General Filter:</span>
		<span class="text-warning mx-1"> @SearchTerm</span>
	}
	@if (language != null)
	{
		<span class="mx-1"> Language Filter: </span>
		<span class="text-warning mx-1"> @language.LanguageName</span>
	}
	@if (category != null)
	{
		<span class="mx-1"> Category Filter: </span>
		<span class="text-warning mx-1"> @category.CategoryName</span>
	}
	<input style="display:inline" id="languageFilter" @oninput="@(e => CallChangeAsync("languageFilter"))" @bind="_languageFilter" placeholder="Language Contains Filter" class="mx-1 form-control" />
	<input style="display:inline" id="categoryFilter" @bind="_categoryFilter" @oninput="@(e => CallChangeAsync("categoryFilter"))" placeholder="Category Contains Filter" class="mx-1 form-control" />

	@if (!string.IsNullOrWhiteSpace(SearchTerm) || !string.IsNullOrWhiteSpace(language?.LanguageName) || !string.IsNullOrWhiteSpace(category?.CategoryName) || _languageFilter != null || _categoryFilter != null)
	{
		<button class="btn btn-outline-primary mx-1" type="button" @onclick="@( ( ) => RemoveFilter(  ) )">Remove Filter</button>
	}
	<button class="btn btn-outline-secondary mx-1" type="button" @onclick="@( ( ) => LoadData(  ) )">Reload</button>
</header>
<div class="form-field row">
	<button class="btn btn-sm btn-outline-success" accesskey="0" @onclick="CreateNew">Create New (0) <i class="fas fa-plus"></i></button>
	<label class="control-label col-md-1">Filter</label>
	<input @bind="SearchTerm"
	@oninput="@(e => CallChangeAsync("SearchInput"))" id="SearchInput"
			 class="form-control col-md-2" accesskey="1" placeholder="Type to Filter (Alt+1)" />
	<label class="control-label col-md-1" for="_showTiles">Show Tiles</label>
	<input id="_showTiles" @bind="_showTiles" type="checkbox" class="form-control col-md-1" />
	<label for="_showOnlyLanguageAndCategory" class="control-label col-md-3">Show only language and category</label>
	<input id="_showOnlyLanguageAndCategory" @bind="_showOnlyLanguageAndCategory" type="checkbox" class="form-control col-md-1" />

</div>
@if (intellisenses == null && _loadFailed)
{
	<h1 class="text-danger">The data failed to load please try again in a little while..</h1>
}
else if (intellisenses == null)
{
	<Loading />
}
else if (intellisenses.Count == 0)
{
	<text>No Custom IntelliSenses found</text>
}
else
{
	@if (_showTiles)
	{
		string group = "";
		<div class="layout-as-cards">
			@foreach (var intellisense in intellisenses.OrderBy(v => v.Language.LanguageName).ThenBy(v => v.Category.CategoryName))
			{
				@if (group != intellisense.Language.LanguageName + " / " + intellisense.Category.CategoryName)
				{
					<div class="card p-2">
						<button class="btn" style="color:black;background-color:@intellisense.Language.Colour" @onclick="@(() => ApplySpecialFilter(intellisense.Language.Id,intellisense.Category.Id))">
							@intellisense.Language.LanguageName / @intellisense.Category.CategoryName
						</button>
					</div>
				}
				@if (!_showOnlyLanguageAndCategory)
				{
					<div class="card p-2" title="@intellisense.SendKeysValue">
						<div class="row">
							<div class="col-12">
								<div class="button-group"></div>
								<button class="btn btn-outline-warning" @onclick="@(() => EditAsync(intellisense.Id))">
									@intellisense.DisplayValue
									<i class="fa-regular fa-edit"></i>
								</button>
								<button class="btn btn-sm btn-outline-primary" @onclick="@(() => CopyItemAsync(intellisense.SendKeysValue))">
									<i class="fa-regular fa-copy"></i>
								</button>
								<button title="Copy and switch and paste" class="btn btn-sm btn-danger" @onclick="@(() => CopyAndPasteAsync(intellisense.SendKeysValue))">
									<i class="fa-solid fa-paste"></i>
								</button>
							</div>
						</div>
					</div>
				}
				group = intellisense.Language.LanguageName + " / " + intellisense.Category.CategoryName;
			}
		</div>
	}
	else
	{
		<table class="table table-dark table-sm table-bordered table-striped" id="table1">
			<thead>
				<tr>
					<th style="width: 60px">
						Language
						<button @onclick="@(e  => SortCustomIntelliSenses("LanguageName","Ascending"))" class="btn btn-sm btn-info"><i class="oi oi-sort-ascending"></i></button>
						<button @onclick="@(e => SortCustomIntelliSenses("LanguageName","Descending"))" class="btn btn-sm btn-info"><i class="oi oi-sort-descending"></i></button>
					</th>
					<th style="width: 60px">
						<div class="row">
							<div class="col-md-12">Category</div>
						</div>
					</th>
					<th>
						Display Value
						<button @onclick="@(e  => SortCustomIntelliSenses("DisplayValue","Ascending"))" class="btn btn-sm btn-info"><i class="oi oi-sort-ascending"></i></button>
						<button @onclick="@(e => SortCustomIntelliSenses("DisplayValue","Descending"))" class="btn btn-sm btn-info"><i class="oi oi-sort-descending"></i></button>

					</th>
					<th>SendKeys Value</th>
					<th style="width: 30px">Delivery Type</th>
					<th>
						<button accesskey="6" class="btn btn-sm btn-outline-success" @onclick="SaveAllCustomIntelliSenses">Save All (6) <i class="oi oi-hard-drive"></i></button>
					</th>
				</tr>
			</thead>
			<tbody>
				@{
					var counter = 6;
				}
				@foreach (var intellisense in intellisenses)
				{
					if (counter > 0)
					{
						counter++;
					}
					<tr>
						<td>
							<input type="hidden" @bind="intellisense.Id" />
							<input type="hidden" @bind="intellisense.LanguageId" />
							<input type="hidden" @bind="intellisense.CategoryId" />
							<input type="hidden" @bind="intellisense.CommandType" />
							<input type="hidden" @bind="intellisense.Remarks" />
							<input type="hidden" @bind="intellisense.ComputerId" />
							<input disabled="disabled" class="form-control-sm" @bind="intellisense.Language.LanguageName" />
						</td>
						<td>
							<input disabled="disabled" type="text" class="form-control-sm" @bind="intellisense.Category.CategoryName" />
						</td>
						<td>
							<input class="form-control-sm" style="min-width: 200px" @bind="@intellisense.DisplayValue" />
						</td>
						<td>
							<textarea style="min-width: 380px;height: 60px" rows=3 title="@intellisense?.SendKeysValue" class="form-control-sm" @bind="@intellisense!.SendKeysValue"></textarea>
						</td>
						<td>
							<select style="min-width: 130px" class="form-control-sm col-md-8" @bind="@intellisense.DeliveryType">
								@if (GeneralLookups != null)
								{
									@foreach (var lookup in GeneralLookups)
									{
										@if (intellisense.DeliveryType == lookup.ItemValue)
										{
											<option selected value="@lookup.ItemValue">@lookup.ItemValue</option>

										}
										else
										{
											<option value="@lookup.ItemValue">@lookup.ItemValue</option>
										}
									}
								}
							</select>
						</td>

						<td>
							<button class="btn btn-outline-warning" @onclick="@(() => EditAsync(intellisense.Id))"><i class="oi oi-pencil"></i></button>
							<button class="btn btn-outline-danger" @onclick="@(() => ConfirmDelete(intellisense.Id))"><i class="oi oi-circle-x"></i></button>

							<button class="btn btn-outline-primary" @onclick="@(() => CopyItemAsync(intellisense.SendKeysValue))"><i class="fa-regular fa-copy"></i></button>

						</td>
					</tr>
				}
			</tbody>
		</table>
	}


}
@if (CustomIntellisenseIdDelete != null)
{
	<TemplatedDialog Show="ShowDialog">
		<ConfirmDialog Message="Please confirm you wish to Delete this Customer IntelliSense!"
							Title="Confirmation Required"
							OnCancel="CancelDelete" OnConfirm="@(() => DeleteCustomIntelliSense((int)CustomIntellisenseIdDelete))">
		</ConfirmDialog>
	</TemplatedDialog>
}

@*<TemplatedDialog Show="showCreateNewOrEdit">
	<CustomIntelliSense OnClose="CloseCreateNew" customIntellisenseId="_customIntellisenseId" />
	</TemplatedDialog>*@
