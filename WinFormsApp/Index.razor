@page "/"
@using System.Diagnostics;
@using RazorClassLibrary.Pages
<CascadingBlazoredModal>
	@if (!showAIChat)
	{
		<div class='m-2' style="text-align: center;">
			<button accesskey="/" class="btn btn-sm btn-outline-secondary" @onclick="@(() => MaximizeWindow())"><u>/</u>
				Maximize</button>
			<button accesskey="_" class="btn btn-sm btn-outline-secondary" @onclick="@(() => MinimizeWindow())"><u>_</u>
				Minimize</button>
			<button accesskey="*" class="btn btn-sm btn-outline-secondary" @onclick="@(() => RestoreWindow())"><u>*</u>
				Restore</button> <button class="btn btn-sm btn-outline-info" @onclick="@(() => RefreshCache())">
				<i class="fas fa-sync"></i> Refresh Data
			</button>
			<button accesskey="A" class="btn btn-sm btn-outline-primary" @onclick="@(() => ShowAIChat())"><u>A</u>I
				@AIChatButtonCaption</button>
		</div>
	}
	<div class='m-2'>
		@if (showAIChat)
		{
			<AIChatComponent RunningInBlazorHybrid="true" />
		}
		else if (languageAndCategoryListing)
		{
			<CustomIntelliSenseTable CategoryId="@categoryId" LanguageId="@languageId" RunningInBlazorHybrid="true"
				CloseApplication="CloseWindow" MaximizeApplication="MaximizeWindow" />
		}
		else if (launcher)
		{
			<LauncherTable CategoryId="@categoryId" CloseApplication="CloseWindow" RunningInBlazorHybrid="true"
				RefreshData="@refreshRequested" />
		}
		else // filtering by display value mostly
		{
			<CustomIntelliSenses CategoryIdFilter="@categoryId" LanguageIdFilter="@languageId" RunningInBlazorHybrid="true"
				SearchTermParameter="@searchTerm" CloseApplication="CloseWindow" MaximizeApplication="MaximizeWindow" />
		}
	</div>
</CascadingBlazoredModal>
