@inject IJSRuntime JSRuntime

<h4>Insert/Edit Todos</h4>
<EditForm Model="@Todo" OnValidSubmit="@Save">
	<DataAnnotationsValidator />
	@if (Todo!.Id > 0)
	{
		<div>@Todo.Id</div>
	}

	<table class="table table-bordered table-striped table-responsive table-sm" id="table1">
		<thead>
			<tr>
				<th>Title/Priority</th>
				<th style="width: 40%">Description</th>
				<th>Done</th>
				<th>Project</th>
				<th style="width:10%">Action</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>
					<div class="input-group input-group">
						<div class="input-group-prepend bg-info">
							<i class="oi oi-text p-2"></i>
						</div>
						<InputText class="form-control" accesskey="3" @bind-Value="Todo.Title" placeholder="Enter a Title (Alt+3)"
						@onblur="@(e => CallChangeAsync(Todo.Id.ToString() + "Title"))" id="@(Todo.Id.ToString() + "Title")" />
						@if (Todo.Title?.Length > 0)
						{
							<div class="input-group-append bg-success">
								<i class="oi oi-check p-2"></i>
							</div>
						}
						else
						{
							<div class="input-group-append bg-danger">
								<i class="oi oi-arrow-left p-2"></i>
							</div>
						}
					</div>
					<ValidationMessage For="@(() => Todo.Title)" />
					<div class="input-group my-2">
						<div class="input-group-prepend bg-info">
							<i class="oi oi-infinity p-2"></i>
						</div>
						<InputNumber class="form-control" @bind-Value="Todo.SortPriority" title="Higher the number, higher the priority"  />
							<div class="input-group-append bg-info">
								<i class="oi oi-arrow-circle-top p-2"></i>
							</div>
					</div>
				</td>
				<td>

					<div class="input-group input-group">
						<div class="input-group-prepend bg-info">
							<i class="oi oi-document p-2"></i>
						</div>
						<InputTextArea rows="3" class="form-control" @bind-Value="Todo.Description" placeholder="Enter what needs to be done." @onblur="@(e => CallChangeAsync(Todo.Id.ToString()+ "Description"))" id="@(Todo.Id.ToString() + "Description")" />
						@if (Todo.Description?.Length > 0)
						{
							<div class="input-group-append bg-success">
								<i class="oi oi-check p-2"></i>
							</div>
						}
						else
						{
							<div class="input-group-append bg-danger">
								<i class="oi oi-arrow-left p-2"></i>
							</div>
						}
					</div>
					<ValidationMessage For="@(() => Todo.Description)" />
				</td>
				<td>
					<InputCheckbox class="form-checkbox w-100"  @bind-Value="Todo.Completed" />
				</td>
				<td>
					<div class="input-group input-group">
						<div class="input-group-prepend bg-info">
							<i class="oi oi-badge p-2"></i>
						</div>
						<InputText class="form-control" @bind-Value="Todo.Project" placeholder="Optionally Enter a Project" @onblur="@(e => CallChangeAsync(Todo.Id.ToString()+ "Project"))" id="@(Todo.Id.ToString() + "Project")" />
						@if (Todo.Project?.Length > 0)
						{
							<div class="input-group-append bg-success">
								<i class="oi oi-check p-2"></i>
							</div>
						}
						else
						{
							<div class="input-group-append bg-primary">
								<span class="p-2">?</span>
								@*<i class="oi oi-arrow-left p-2"></i>*@
							</div>
						}
					</div>
					<ValidationMessage For="@(() => Todo.Project)" />
				</td>
				<td class="btn-group">
					<button type="submit" class="btn btn-success btn-lg">Submit</button>
					<button type="button" class="btn btn-outline-primary btn-lg" @onclick="@Cancel">Cancel</button>
				</td>
			</tr>
		</tbody>
	</table>


</EditForm>


@code {
	[Parameter] public Todo? Todo { get; set; }
	[Parameter] public EventCallback Save { get; set; }
	[Parameter] public EventCallback Cancel { get; set; }
	private async Task CallChangeAsync(string elementId)
	{
		await JSRuntime.InvokeVoidAsync("CallChange", elementId);
	}

}
