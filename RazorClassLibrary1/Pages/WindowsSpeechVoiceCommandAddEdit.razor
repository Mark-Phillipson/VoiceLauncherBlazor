@page "/windowsspeechvoicecommand/{Id:int?}"
<div style="min-width:80vw">

    <EditForm Model="@WindowsSpeechVoiceCommandDTO" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        @*<ValidationSummary />*@
        @if (WindowsSpeechVoiceCommandDTO.Id > 0)
        {
            <span class="text-info m-1">@WindowsSpeechVoiceCommandDTO.Id</span>
            <SpokenFormTable WindowsSpeechVoiceCommandId="@WindowsSpeechVoiceCommandDTO.Id" />
        }

        <div class="row">
            <div class="col-12">
                @if (WindowsSpeechVoiceCommandDTO.Id == 0)
                {

                    <div class="text-danger">For now just create a single spoken form, once the command has been created you can create more by editing the command.</div>
                    <button class="btn btn-outline-info m-1" type="button" @onclick="@( ( ) => Dictation(  ) )">&lt;dictation&gt;</button>


                    <div class="form-group">
                        <label for="SpokenCommand">Spoken Command: </label> <i class="text-danger fa">*</i>
                        <InputTextArea rows="2" id="SpokenCommand" class="form-control" @bind-Value="@WindowsSpeechVoiceCommandDTO.SpokenCommand"
                        @onblur="@(() => CallChangeAsync("SpokenCommand"))" placeholder="Enter Spoken Command"></InputTextArea>
                        <ValidationMessage For="@(() => WindowsSpeechVoiceCommandDTO.SpokenCommand)" />
                    </div>
                }

                <div class="form-group">
                    <label for="Description">Description: </label>
                    <InputTextArea rows="2" id="Description" class="form-control" @bind-Value="@WindowsSpeechVoiceCommandDTO.Description"
                    @onblur="@(() => CallChangeAsync("Description"))" placeholder="Enter Description"></InputTextArea>
                    <ValidationMessage For="@(() => WindowsSpeechVoiceCommandDTO.Description)" />
                </div>
                <div class="form-group">
                    <label for="ApplicationName">Application Name: </label>
                    <InputSelect id="application" class="form-control border border-warning col-sm-8" @bind-Value="@WindowsSpeechVoiceCommandDTO.ApplicationName">
                        @if (ApplicationDetails != null)
                        {
                            @foreach (var application in ApplicationDetails)
                            {
                                <option value="@application.ApplicationTitle">@application.ApplicationTitle</option>
                            }
                        }
                        @if (WindowsSpeechVoiceCommandDTO.ApplicationName == "Global")
                        {
                            <option value="Global" selected>Global</option>
                        }
                        else
                        {
                            <option value="Global">Global</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => WindowsSpeechVoiceCommandDTO.ApplicationName)" />
                </div>
                <div class="form-group">
                    <button class="btn btn-outline-success" type="button" @onclick="@( ( ) => Control(  ) )">Control</button>
                    <button class="btn btn-outline-success" type="button" @onclick="@( ( ) => Alternate(  ) )">Alternate</button>
                    <button class="btn btn-outline-success" type="button" @onclick="@( ( ) => Shift(  ) )">Shift</button>
                    <button class="btn btn-outline-success" type="button" @onclick="@( ( ) => Enter(  ) )">Enter</button>

                    <label for="SendKeysValue">Send Keys Value: </label>
                    <InputText id="SendkeysValue" class="form-control" @bind-Value="@WindowsSpeechVoiceCommandDTO.SendKeysValue"
                    @onblur="@(() => CallChangeAsync("SendkeysValue"))" placeholder="Enter Sendkeys Value"></InputText>
                    <ValidationMessage For="@(() => WindowsSpeechVoiceCommandDTO.SendKeysValue)" />
                </div>
                <div class="form-group">
                    <label for="AutoCreated">Auto Created : </label>
                    <InputCheckbox  disabled id="AutoCreated" class="form-checkbox" @bind-Value="@WindowsSpeechVoiceCommandDTO.AutoCreated"> </InputCheckbox>
                    <ValidationMessage For="@(() => WindowsSpeechVoiceCommandDTO.AutoCreated)" />
                </div>
            </div>
        </div>
        <hr>
        <div class="btn-group" style="float:right">
            <a accesskey="c" class="btn btn-lg btn-outline-primary" @onclick="@Close"><u>C</u>ancel</a>
            <button @TaskRunning accesskey="s" type="submit" class="btn btn-lg btn-primary"><u>S</u>ave Record</button>
        </div>

    </EditForm>
</div>
