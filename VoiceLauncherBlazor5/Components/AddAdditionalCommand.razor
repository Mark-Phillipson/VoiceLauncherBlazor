
<EditForm Model="@AdditionalCommand" OnValidSubmit="@HandleValidSubmit">

	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label for="WaitBefore">Wait Before: </label>
		<InputNumber id="WaitBefore" class="form-control" @bind-Value="@AdditionalCommand.WaitBefore" placeholder="Enter Wait Before"></InputNumber>
		<ValidationMessage For="@(() => AdditionalCommand.WaitBefore)" />
	</div>

	<div class="form-group">
		<label for="SendKeys_Value">Command: </label>
		<InputTextArea rows="6" id="SendKeys_Value" class="form-control" @bind-Value="@AdditionalCommand.SendKeysValue" placeholder="Enter Command"></InputTextArea>
		<ValidationMessage For="@(() => AdditionalCommand.SendKeysValue)" />
	</div>

	<div class=form-group>
		<label for="@AdditionalCommand.DeliveryType" class="col-md-3"> Delivery Type</label>
		<InputSelect class="form-control col-md-9" @bind-Value="AdditionalCommand.DeliveryType">
			<option value="">-</option>
			@if (generalLookups != null)
			{
				@foreach (var lookup in generalLookups)
				{
					@if (AdditionalCommand.DeliveryType == lookup.ItemValue)
					{
						<option selected value="@lookup.ItemValue">@lookup.ItemValue</option>
					}
					else
					{
						<option value="@lookup.ItemValue">@lookup.ItemValue</option>
					}
				}
			}
		</InputSelect>
		<ValidationMessage For="@(() => AdditionalCommand.DeliveryType)" />
	</div>
	<div class="form-group">
		<label for="remarks">Remarks: </label>
		<InputText id="remarks" class="form-control" @bind-Value="@AdditionalCommand.Remarks" placeholder="Enter Remarks"></InputText>
		<ValidationMessage For="@(() => AdditionalCommand.Remarks)" />
	</div>

	<button type="submit" class="btn btn-primary">Save Additional Command</button>
	<a class="btn btn-outline-primary" @onclick="@Close">Close</a>
</EditForm>

