@page "/talon-voice-command-search"

@using TalonVoiceCommandsServer.Components
@* @using directives moved to TalonVoiceCommandSearch.razor.cs *@

@if (_isLoadingFilters)
{
    <div class='@(IsBlazorHybrid ? "container-fluid px-2 mt-4" : "container mt-4")' style="height: 200px;">
        <div class="d-flex justify-content-center align-items-center h-100">
            <div class="spinner-border text-primary" role="status" aria-label="Loading filter options">
                <span class="visually-hidden">Loading...</span>
            </div>
            <span class="ms-3">Loading filter options, please wait...</span>
        </div>
    </div>
}
else
{
    <div class='@(IsBlazorHybrid ? "container-fluid px-2 mt-4" : "container mt-4")' @onkeydown="OnKeyDown" tabindex="-1">
    
        <!-- Left-hand list side panel -->
        <TalonVoiceCommandsServer.Components.Shared.ListSidePanel 
            IsOpen="@_isListPanelOpen" 
            SelectedListName="@_selectedPanelListName" 
            Values="@_selectedPanelValues" 
            IsLoading="@_isListPanelLoading" 
            OnClose="@CloseListSidePanel" />
    <div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0">Talon Voice Command Search</h2>
    <span class="badge filter-btn-application px-3 py-2" style="font-size:1rem; border-radius:0.5rem;">@CurrentApplication</span>
    </div>

    <!-- Tabbed Navigation -->
    <div class="row mb-3">
        @if (!IsBlazorHybrid)
        {
            <div class="col-12">
                <ul class="nav nav-tabs" id="talonToolsTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == TabType.SearchCommands ? "active" : "")" 
                                id="search-tab" 
                                type="button" 
                                role="tab" 
                                aria-controls="search" 
                                aria-selected="@(ActiveTab == TabType.SearchCommands ? "true" : "false")"
                                @onclick="() => SwitchTab(TabType.SearchCommands)"
                                accesskey="1">
                            <i class="oi oi-magnifying-glass me-1"></i> <u>1</u>. Search Commands
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == TabType.ImportScripts ? "active" : "")" 
                                id="import-tab" 
                                type="button" 
                                role="tab" 
                                aria-controls="import" 
                                aria-selected="@(ActiveTab == TabType.ImportScripts ? "true" : "false")"
                                @onclick="() => SwitchTab(TabType.ImportScripts)"
                                accesskey="2">
                            <i class="oi oi-cloud-upload me-1"></i> <u>2</u>. Import Scripts
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == TabType.AnalysisReport ? "active" : "")" 
                                id="analysis-tab" 
                                type="button" 
                                role="tab" 
                                aria-controls="analysis" 
                                aria-selected="@(ActiveTab == TabType.AnalysisReport ? "true" : "false")"
                                @onclick="() => SwitchTab(TabType.AnalysisReport)"
                                accesskey="3">
                            <i class="oi oi-bar-chart me-1"></i> <u>3</u>. Analysis Report
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == TabType.Lists ? "active" : "")"
                                id="lists-tab"
                                type="button"
                                role="tab"
                                aria-controls="lists"
                                aria-selected="@(ActiveTab == TabType.Lists ? "true" : "false")"
                                @onclick="() => SwitchTab(TabType.Lists)"
                                accesskey="4">
                            <i class="oi oi-list-rich me-1"></i> <u>4</u>. Lists
                        </button>
                    </li>
                </ul>
            </div>
        }
    </div>

    <!-- Tab Content -->
    <div class="tab-content" id="talonToolsTabContent">
        <!-- Search Commands Tab -->
        <div class="tab-pane fade @(ActiveTab == TabType.SearchCommands ? "show active" : "")" 
             id="search" 
             role="tabpanel" 
             aria-labelledby="search-tab" 
             tabindex="0">
            
            <!-- Search Bar / Filters wrapper with persistent toggle -->
            <div class="d-flex justify-content-between align-items-start gap-3 mb-3">
                <div class="flex-grow-1">
                    <!-- Animated collapse container: toggles collapsed class based on IsFiltersCollapsed -->
                    <div id="searchFiltersSection" class="filters-collapse @(IsFiltersCollapsed ? "collapsed" : "expanded")" aria-hidden="@(IsFiltersCollapsed.ToString().ToLower())">
                        <!-- Search Bar and Semantic Toggle -->
                        <div class="d-flex flex-wrap align-items-end justify-content-between gap-3 mb-3">
                            <form class="d-flex flex-grow-1 gap-3 align-items-end" @onsubmit="OnSearch" @onsubmit:preventDefault="true" style="min-width:0;">
                                <div class="d-flex flex-column flex-grow-1" style="min-width:180px;">
                                    <label for="searchTerm" class="form-label">Search Term</label>
                                    <input @ref="searchInput" id="searchTerm" class="form-control w-100" type="text" placeholder="@GetSearchPlaceholder()" @bind="SearchTerm" @bind:event="oninput" @onblur="OnSearchInputBlur" @onkeyup="OnSearchInputKeyUp" aria-label="Search" disabled="@IsLoading" accesskey="s" />
                                    <small class="form-text text-muted mt-1 w-100 text-center">Alt+S</small>
                                </div>
                                <div class="d-flex flex-column flex-grow-1" style="min-width:150px;">
                                    <label for="searchScope" class="form-label">Scope</label>
                                    <select id="searchScope" class="form-select search-scope-select w-100" @onchange="OnSearchScopeChange" disabled="@IsLoading" value="@SelectedSearchScope" accesskey="p" aria-label="Search scope" title="Select what to search in">
                                        <option value="@SearchScope.CommandNamesOnly">Names Only</option>
                                        <option value="@SearchScope.Script">Search Script</option>
                                        <option value="@SearchScope.All">Search All</option>
                                    </select>
                                    <small class="form-text text-muted mt-1 w-100 text-center">Alt+P</small>
                                </div>
                                <div class="d-flex flex-column align-items-center justify-content-end" style="min-width:110px;">
                                    <label class="form-label d-none d-md-block">&nbsp;</label>
                                    <div class="d-flex align-items-center w-100 flex-wrap">
                                        <div class="d-flex flex-column align-items-center">
                                            <button class="btn btn-primary" type="submit" aria-label="Search" disabled="@IsLoading" accesskey="h" title="Search">
                                                @if (IsLoading)
                                                {
                                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                                }
                                                else
                                                {
                                                    <span> Search</span>
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                                                    </svg>
                                                }
                                            </button>
                                            <!-- Alt+H label centered directly under the search button -->
                                            <small class="form-text text-muted mt-1 text-center">Alt+H</small>
                                        </div>

                                        <!-- Inline switches placed next to the button on larger screens; will wrap on small screens -->
                                        <div class="d-flex align-items-center gap-2 ms-2 flex-wrap">
                                            <div class="form-check form-switch mb-0">
                                                <input class="form-check-input" type="checkbox" id="autoFilterToggle" @bind="AutoFilterByCurrentApp" disabled="@IsLoading" accesskey="u" />
                                                <label class="form-check-label" for="autoFilterToggle">A<u>u</u>to-Filter by App</label>
                                            </div>
                                            <div class="form-check form-switch mb-0">
                                                <input class="form-check-input" type="checkbox" id="showFullCardsToggle" @bind="ShowFullCards" disabled="@IsLoading" accesskey="c" />
                                                <label class="form-check-label" for="showFullCardsToggle">Show Full <u>C</u>ards</label>
                                            </div>
                                        </div>
                                    </div>

                                    

                                </div>
                            </form>
                            
                        </div>

                        <!-- Focus Mode Alert -->
                        @if (IsInFocusMode())
                        {
                            <div class="alert alert-info mb-3" role="alert">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye me-2" viewBox="0 0 16 16">
                                    <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"/>
                                    <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"/>
                                </svg>
                                <strong>Focus Mode:</strong> Showing only the selected command. Click "Exit Focus" or search again to see all results.
                            </div>
                        }

                        <!-- Filter Form -->
                        <form class="mb-3">
                            <div class="row mb-2">
                                <div class="col-md-3">
                                    <label class="form-label small label-application">Filter by <span class="underline-application">A</span>pplication:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-application" @onclick="ShowApplicationModal" disabled="@IsLoading" accesskey="a" title="Filter by Application">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">🖥️</span>
                                            @if (string.IsNullOrWhiteSpace(SelectedApplication))
                                            {
                                                <span>All Applications</span>
                                            }
                                            else
                                            {
                                                <span>@SelectedApplication</span>
                                            }
                                        </button>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label class="form-label small label-mode">Filter by <span class="underline-mode">M</span>ode:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-mode" @onclick="ShowModeModal" disabled="@IsLoading" accesskey="m" title="Filter by Mode">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">⚙️</span>
                                            @if (string.IsNullOrWhiteSpace(SelectedMode))
                                            {
                                                <span>All Modes</span>
                                            }
                                            else
                                            {
                                                <span>@SelectedMode</span>
                                            }
                                        </button>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label class="form-label small label-tags">Filter by <span class="underline-tags">T</span>ags:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-tags" @onclick="ShowTagsModal" disabled="@IsLoading" accesskey="t" title="Filter by Tags">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" focusable="false">
                                                    <path d="M2 2a1 1 0 0 0-1 1v3.586a1 1 0 0 0 .293.707l6 6a1 1 0 0 0 1.414 0l4.586-4.586a1 1 0 0 0 0-1.414l-6-6A1 1 0 0 0 2 2z"/>
                                                    <path d="M7.5 5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                                                </svg>
                                            </span>
                                            @if (string.IsNullOrWhiteSpace(SelectedTags))
                                            {
                                                <span>All Tags</span>
                                            }
                                            else
                                            {
                                                <span>@SelectedTags</span>
                                            }
                                        </button>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label class="form-label small label-os">Filter by <span class="underline-os">O</span>S:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-os" @onclick="ShowOSModal" disabled="@IsLoading" accesskey="o" title="Filter by Operating System">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">💽</span>
                                            @if (string.IsNullOrWhiteSpace(SelectedOperatingSystem))
                                            {
                                                <span>All Operating Systems</span>
                                            }
                                            else
                                            {
                                                <span>@SelectedOperatingSystem</span>
                                            }
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-2">
                                <div class="col-md-3">
                                    <label class="form-label small label-repository">Filter by <span class="underline-repository">R</span>epository:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-repository" @onclick="ShowRepositoryModal" disabled="@IsLoading" accesskey="r" title="Filter by Repository">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">📁</span>
                                            @if (string.IsNullOrWhiteSpace(SelectedRepository))
                                            {
                                                <span>All Repositories</span>
                                            }
                                            else
                                            {
                                                <span>@SelectedRepository</span>
                                            }
                                        </button>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label class="form-label small label-title">Filter by T<span class="underline-title">i</span>tle:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-title" @onclick="ShowTitleModal" disabled="@IsLoading" accesskey="i" title="Filter by Title">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">🔖</span>
                                            @if (string.IsNullOrWhiteSpace(SelectedTitle))
                                            {
                                                @if (AvailableTitles?.Any() == true)
                                                {
                                                    <span>All Titles</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">All Titles (No data imported)</span>
                                                }
                                            }
                                            else
                                            {
                                                <span>@SelectedTitle</span>
                                            }
                                        </button>
                                        <!-- Backwards-compatible hidden select used by tests and some tools -->
                                        <select class="form-select form-select-sm filter-title visually-hidden" @onchange="OnTitleFilterChange" aria-label="Filter by Title" accesskey="i">
                                            <option value="">All Titles</option>
                                            @foreach (var t in AvailableTitles ?? new List<string>())
                                            {
                                                <option value="@t">@t</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <label class="form-label small label-code-language">Filter by C<u>o</u>de Language:</label>
                                    <div class="d-flex">
                                        <button type="button" class="btn btn-outline-secondary flex-grow-1 text-start filter-btn-code-language" @onclick="ShowCodeLanguageModal" disabled="@IsLoading" accesskey="o" title="Filter by Code Language">
                                            <span class="filter-btn-icon me-2" aria-hidden="true">💻</span>
                                            @if (string.IsNullOrWhiteSpace(SelectedCodeLanguage))
                                            {
                                                <span>All Code Languages</span>
                                            }
                                            else
                                            {
                                                <span>@SelectedCodeLanguage</span>
                                            }
                                        </button>
                                    </div>
                                </div>

                                <div class="col-md-3 d-flex align-items-end">
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-outline-secondary btn-sm" @onclick="ClearFilters" type="button" disabled="@IsLoading" accesskey="l">
                                            @if (IsLoading)
                                            {
                                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                                <span>Clearing...</span>
                                            }
                                            else
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle me-2" viewBox="0 0 16 16">
                                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                                    <path d="m4.646 4.646.708.708L8 8l2.646-2.646.708.708L8.708 8.5l2.647 2.646-.708.708L8 9.207l-2.646 2.647-.708-.708L7.293 8.5 4.646 5.854z"/>
                                                </svg>
                                                <span>C<u>l</u>ear Filters</span>
                                            }
                                        </button>
                                        <button class="btn btn-outline-primary btn-sm" @onclick="RefreshFiltersAsync" type="button" disabled="@IsLoading">
                                            @if (IsLoading)
                                            {
                                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                                <span>Refreshing...</span>
                                            }
                                            else
                                            {
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise me-2" viewBox="0 0 16 16">
                                                    <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z"/>
                                                    <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z"/>
                                                </svg>
                                                <span>Refresh Filters</span>
                                            }
                                        </button>
                                        <!-- Temporary test button to start the random command display manually -->
                                        <button class="btn btn-outline-success btn-sm start-random-demo-btn" onmouseup="(function(){ window.startRandomDemo && window.startRandomDemo({ debugCenter: true }); })()" type="button" title="Start Random Demo (for testing)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-lightbulb me-1" viewBox="0 0 16 16">
                                                <path d="M2 6a6 6 0 1 1 12 0c0 2.5-1.5 3.9-2.5 4.8-.7.6-1.1 1.2-1.1 2.2v.5H6v-.5c0-1-.4-1.6-1.1-2.2C3.5 9.9 2 8.5 2 6z"/>
                                                <path d="M6.5 12a.5.5 0 0 0-.5.5V13h4v-.5a.5.5 0 0 0-.5-.5h-3z"/>
                                            </svg>
                                            Start Random Demo
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-2">
                                <div class="col-12 d-flex justify-content-end">
                                    @if (HasAnyResults())
                                    {
                                        <div class="d-flex align-items-center gap-2">
                                            <span class="badge bg-info fs-6">
                                                @if (IsInFocusMode())
                                                {
                                                    <text>Focused on 1 result</text>
                                                }
                                                else
                                                {
                                                    var count = GetEffectiveResultCount();
                                                    <text>@count @(count == 1 ? "result" : "results") found</text>
                                                }
                                            </span>
                                            @if (IsInFocusMode())
                                            {
                                                <button class="btn btn-outline-secondary btn-sm" @onclick="ExitFocusMode" title="Show all results again" accesskey="x">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left me-1" viewBox="0 0 16 16">
                                                        <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
                                                    </svg>
                                                    E<u>x</u>it Focus
                                                </button>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Toggle button always visible to collapse/expand the search+filters area -->
                <div class="ms-2 d-flex align-items-start">
                    <button class="btn btn-outline-secondary btn-sm" @onclick="ToggleFiltersCollapse" aria-expanded="@( (!IsFiltersCollapsed).ToString().ToLower() )" aria-controls="searchFiltersSection" title="Toggle Search & Filters">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="filters-toggle-icon @(IsFiltersCollapsed ? "collapsed" : "")" viewBox="0 0 16 16" aria-hidden="true" focusable="false">
                            <!-- Chevron-down (rotates left when collapsed via CSS) -->
                            <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Search Results Section (only shown in Search tab) -->
            <div>
        @if (IsLoading)
        {
            <div class="d-flex justify-content-center align-items-center py-5" role="status" aria-live="polite">
                <div class="spinner-border text-primary me-3" role="status" aria-hidden="true">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <span class="text-muted">Searching Talon voice commands...</span>
            </div>
        }
        @if (!string.IsNullOrWhiteSpace(InfoMessage))
        {
            <div class="alert alert-info py-2" role="alert">
                <i class="bi bi-info-circle me-2"></i>@InfoMessage
            </div>
        }
        
        <!-- JavaScript-rendered search results container -->
        <div class="search-results-container" style="display: none;"></div>
        
        @if (Results?.Any() == true)
        {
            <div class="row" aria-label="Search Results">
                @foreach (var cmd in GetDisplayedCommands())
                {
                    <div class="@(IsBlazorHybrid ? "col-12 col-sm-6 col-md-4 col-lg-3 mb-3" : "col-12 col-lg-6 col-xl-4 mb-3")">                        
                        <div class="card @(IsBlazorHybrid ? "h-auto" : "h-110") @(IsInFocusMode() ? "focused" : "")" tabindex="0" @onclick="() => FocusOnCommand(cmd)" style="cursor: pointer;" title="Click to focus on this command">                            
                            @if (AutoFilterByCurrentApp) 
                            { 
                                <div class="card-header px-3 py-2">
                                    <div class="d-flex flex-wrap align-items-center w-100">
                                        <span class="command-text flex-grow-1" style="@((IsBlazorHybrid) ? "min-width:0; white-space:normal; overflow-wrap:break-word;" : "min-width:0; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;")">
                                            @((MarkupString)HighlightCapturesAndFilters(cmd.Command, cmd))
                                        </span>
                                        @if (!string.IsNullOrWhiteSpace(cmd.Title))
                                        {
                                            <span class="badge bg-success badge-with-underline badge-title ms-auto mt-2 mt-md-0" title="Filter by Title (Alt+I)">
                                                @cmd.Title
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                            else 
                            {
                                <div class="card-header d-flex">
                                    <span class="badge filter-btn-application px-2 py-1 me-2" style="font-size:0.95rem; border-radius:0.5rem;">@cmd.Application</span>
                                    <h5 class="card-title mb-1 me-2" style="@(IsBlazorHybrid ? "white-space:normal; word-break:break-word;" : "")">@((MarkupString)HighlightCapturesAndFilters(cmd.Command, cmd))</h5>
                                    <div class="d-flex justify-content-between align-items-center mb-2 flex-wrap gap-1">
                                        <div class="d-flex flex-wrap gap-1 align-items-center">
                                            @if (!string.IsNullOrWhiteSpace(cmd.Title))
                                            {
                                                <span class="badge bg-success badge-with-underline badge-title" title="Filter by Title (Alt+I)">@cmd.Title</span>
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.Mode))
                                            {
                                                <span class="badge bg-secondary badge-with-underline badge-mode" title="Filter by Mode (Alt+M)">@cmd.Mode</span>
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.Tags))
                                            {
                                                @foreach (var tag in cmd.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(t => t.Trim()))
                                                {
                                                    <span class="badge bg-warning text-dark badge-with-underline badge-tags" title="Filter by Tags (Alt+T)">@tag</span>
                                                }
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.OperatingSystem))
                                            {
                                                <span class="badge bg-info badge-with-underline badge-os" title="Filter by OS (Alt+O)">@cmd.OperatingSystem</span>
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.Repository))
                                                {
                                                <span class="badge bg-primary badge-with-underline badge-repository" title="Filter by Repository (Alt+R)">@cmd.Repository</span>
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.CodeLanguage))
                                            {
                                                @foreach (var codeLanguage in cmd.CodeLanguage.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(cl => cl.Trim()))
                                                {
                                                    <span class="badge bg-danger badge-with-underline badge-code-language" title="Filter by Code Language (Alt+O)">@codeLanguage</span>
                                                }
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.Language))
                                            {
                                                @foreach (var language in cmd.Language.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(l => l.Trim()))
                                                {
                                                    <span class="badge bg-dark badge-with-underline badge-language" title="Filter by Language (Alt+L)">@language</span>
                                                }
                                            }
                                            @if (!string.IsNullOrWhiteSpace(cmd.Hostname))
                                            {
                                                @foreach (var hostname in cmd.Hostname.Split(',', StringSplitOptions.RemoveEmptyEntries).Select(h => h.Trim()))
                                                {
                                                    <span class="badge bg-light text-dark badge-with-underline badge-hostname" title="Filter by Hostname (Alt+H)">@hostname</span>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }

                            @* Detailed card body is now conditional on ShowFullCards or focus mode *@
                            @if (ShowFullCards || IsInFocusMode())
                            {
                                <div class="card-body">                                
                                    <div class="mb-2">
                                        <span class="badge filter-btn-application px-2 py-1" style="font-size:0.95rem; border-radius:0.5rem;">@cmd.Application</span>
                                    </div>
                                    <div class="mb-3">
                                        <h6 class="card-subtitle text-muted">Script:</h6>
                                        <pre class="card-text script-content p-2 rounded border">@GetTrimmedScript(cmd.Script)</pre>

                                        @{ 
                                            var listsUsed = GetListsUsedInCommand(cmd.Command);
                                            var capturesUsed = GetCapturesUsedInCommand(cmd.Command);
                                        }

                                        @if (listsUsed.Any() || capturesUsed.Any())
                                        {
                                            <div class="mt-2">
                                                <h6 class="card-subtitle text-muted">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list-ul me-1" viewBox="0 0 16 16">
                                                        <path fill-rule="evenodd" d="M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm-3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
                                                    </svg>
                                                    Lists & Captures Used:
                                                </h6>
                                                <div class="mb-2">
                                                    @* Display clickable lists *@
                                                    @foreach (var listName in listsUsed)
                                                    {
                                                        var displayName = listName;
                                                        // If not already wrapped, add angle brackets for lists and curly braces for captures
                                                        if (!displayName.StartsWith("<") && !displayName.EndsWith(">") && !displayName.StartsWith("{") && !displayName.EndsWith("}"))
                                                        {
                                                            displayName = "<" + displayName + ">";
                                                        }
                                                        <button class="btn btn-outline-secondary btn-sm me-2 mb-1" 
                                                                @onclick="() => OpenListInSidePanel(listName)"
                                                                title="Click to view list contents">
                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-list me-1" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z"/>
                        </svg>
                        @displayName
                        @if (IsListExpanded(listName))
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-chevron-up ms-1" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
                            </svg>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-chevron-down ms-1" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                            </svg>
                        }
                    </button>
                                                    }

                                                    @* Display non-clickable captures with different styling *@
                                                    @foreach (var captureName in capturesUsed)
                                                    {
                                                        <button class="badge bg-warning text-dark me-2 mb-1 capture-badge"
                                                                title="Ask Copilot about this capture"
                                                                @onclick="() => OnCaptureClick(captureName)">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-code me-1" viewBox="0 0 16 16">
                                                                <path d="M5.854 4.854a.5.5 0 1 0-.708-.708l-3.5 3.5a.5.5 0 0 0 0 .708l3.5 3.5a.5.5 0 0 0 .708-.708L2.707 8l3.147-3.146zm4.292 0a.5.5 0 0 1 .708-.708l3.5 3.5a.5.5 0 0 1 0 .708l-3.5 3.5a.5.5 0 0 1-.708-.708L13.293 8l-3.147-3.146z"/>
                                                            </svg>
                                                            &lt;@captureName&gt;
                                                        </button>
                                                    }
                                                </div>

                                                @* Inline expansion removed in favor of side panel display *@
                                            </div>
                                        }

                                        <div class="d-flex justify-content-between align-items-center">
                                            @if (!string.IsNullOrWhiteSpace(cmd.FilePath))
                                            {
                                                <button class="btn btn-outline-primary btn-sm" 
                                                        @onclick="(e) => OnFilePathClick(e, cmd.FilePath)" 
                                                        title="Open @cmd.FilePath in VS Code"
                                                        aria-label="Open @GetFileName(cmd.FilePath) in VS Code">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-code" viewBox="0 0 16 16">
                                                        <path d="M6.854 4.646a.5.5 0 0 1 0 .708L4.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0zM9.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L11.793 8 9.146 5.354a.5.5 0 0 1 0-.708z"/>
                                                        <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H2zm0 1h12v12H2V2z"/>
                                                    </svg> @GetFileName(cmd.FilePath)
                                                </button>
                                            }
                                            <small class="text-muted">@cmd.CreatedAt.ToLocalTime().ToString("g")</small>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                @* Compact single-line view when ShowFullCards is false *@
                                <div class="card-body py-2">
                                    <div class="d-flex align-items-center justify-content-between flex-wrap">
                                        <div class="d-flex align-items-center flex-grow-1 me-2" style="min-width: 0;">
                                            @* Script name (title or filename) *@
                                            <strong class="me-2 text-truncate" style="max-width: 200px;" title="@(!string.IsNullOrWhiteSpace(cmd.Title) ? cmd.Title : GetFileName(cmd.FilePath))">
                                                @(!string.IsNullOrWhiteSpace(cmd.Title) ? cmd.Title : GetFileName(cmd.FilePath))
                                            </strong>
                                        </div>
                                        <div class="d-flex align-items-center gap-2 flex-wrap">
                                            @* Application *@
                                            @if (!string.IsNullOrWhiteSpace(cmd.Application))
                                            {
                                                <span class="badge bg-primary text-truncate" style="max-width: 120px;" title="Application: @cmd.Application">
                                                    <i class="oi oi-monitor me-1"></i>@cmd.Application
                                                </span>
                                            }
                                            
                                            @* Repository *@
                                            @if (!string.IsNullOrWhiteSpace(cmd.Repository))
                                            {
                                                <span class="badge bg-secondary text-truncate" style="max-width: 120px;" title="Repository: @cmd.Repository">
                                                    <i class="oi oi-code me-1"></i>@cmd.Repository
                                                </span>
                                            }
                                            
                                            @* Operating System *@
                                            @if (!string.IsNullOrWhiteSpace(cmd.OperatingSystem))
                                            {
                                                <span class="badge bg-info text-truncate" style="max-width: 100px;" title="Operating System: @cmd.OperatingSystem">
                                                    <i class="oi oi-laptop me-1"></i>@cmd.OperatingSystem
                                                </span>
                                            }
                                            
                                            @* Quick action button *@
                                            @if (!string.IsNullOrWhiteSpace(cmd.FilePath))
                                            {
                                                <button class="btn btn-outline-primary btn-sm" 
                                                        @onclick="(e) => OnFilePathClick(e, cmd.FilePath)" 
                                                        title="Open @cmd.FilePath in VS Code"
                                                        aria-label="Open @GetFileName(cmd.FilePath) in VS Code">
                                                    <i class="oi oi-external-link"></i>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        }
        else if (HasSearched && !IsUsingJavaScriptDisplay)
        {
            @if (!HasAnyData)
            {
                <div class="alert alert-warning" role="alert">
                    <i class="bi bi-database-x me-2"></i>
                    <strong>No data loaded.</strong> 
                    <br />
                    To get results, import your Talon scripts on the <a href="/talon-import" class="alert-link">Import Scripts</a> tab.
                    <br />
                    <small class="text-muted">Note: Once imported, commands are stored in your browser (IndexedDB) and persist across sessions.</small>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-search me-2"></i>
                    No results found for your search criteria. Try adjusting your search terms or filters.
                </div>
            }
        }
            </div>
        </div>
        <!-- End of Search Commands Tab -->

        <!-- Import Scripts Tab -->
        <div class="tab-pane fade @(ActiveTab == TabType.ImportScripts ? "show active" : "")" 
             id="import" 
             role="tabpanel" 
             aria-labelledby="import-tab" 
             tabindex="0">
            
            <div class="mb-3">
                <h3><i class="oi oi-cloud-upload me-2"></i>Import Talon Scripts</h3>
                <p>Import .talon files into the database for semantic search and management.</p>
            </div>
            
            <!-- Embedded Import Component -->
            <TalonVoiceCommandsServer.Components.Shared.TalonImportComponent />
            
        </div>
        <!-- End of Import Scripts Tab -->

        <!-- Lists Tab -->
        <div class="tab-pane fade @(ActiveTab == TabType.Lists ? "show active" : "")"
             id="lists"
             role="tabpanel"
             aria-labelledby="lists-tab"
             tabindex="0">

            <div class="mb-3">
                <h3><i class="oi oi-list-rich me-2"></i>All Talon Lists</h3>
                <p class="text-muted">Browse and open Talon list values in the side panel.</p>
            </div>

            <div class="mb-3">
                <input class="form-control" placeholder="Search lists..." @bind="ListFilterTerm" @bind:event="oninput" aria-label="Filter lists" />
            </div>

            @if (_isListsLoading)
            {
                <div class="d-flex justify-content-center align-items-center" style="height:120px">
                    <div class="spinner-border text-primary" role="status" aria-hidden="true"></div>
                </div>
            }
            else if ((_allListNames == null || !_allListNames.Any()) && !_isListsLoading)
            {
                <div class="alert alert-secondary" role="status">No lists available. Import Talon data or check IndexedDB.</div>
            }
            else
            {
                <div class="list-group list-group-flush">
                    @foreach (var name in FilteredListNames)
                    {
                        var activeClass = (_highlightedListName != null && string.Equals(_highlightedListName, name, StringComparison.OrdinalIgnoreCase)) ? "active" : "";
                        // Use client-side handler to render immediately from IndexedDB and then inform the server.
                        <button class="list-group-item list-group-item-action @activeClass" onclick="window.TalonStorageDB && window.TalonStorageDB.onListButtonClick && window.TalonStorageDB.onListButtonClick('@(name?.Replace("\\","\\\\").Replace("'","\\'"))')">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="me-2 text-truncate">@name</div>
                                <small class="text-muted">@{
                                        if (_listContentsCache != null && name != null && _listContentsCache.TryGetValue(name, out var listVals)) {
                                            @listVals.Count.ToString();
                                        } else {
                                            @("-");
                                        }
                                    }</small>
                            </div>
                        </button>
                    }
                </div>
            }

        </div>
        <!-- End of Lists Tab -->

        <!-- Analysis Report Tab -->
        <div class="tab-pane fade @(ActiveTab == TabType.AnalysisReport ? "show active" : "")" 
             id="analysis" 
             role="tabpanel" 
             aria-labelledby="analysis-tab" 
             tabindex="0">

            <!-- New Analysis Component: uses IndexedDB via JSInterop -->
            <TalonVoiceCommandsServer.Components.Pages.TalonVoiceCommandAnalysis />

            @* Keep the existing repository breakdown below for compatibility if data is available *@
            @if (CommandsBreakdown.Any())
            {
                <div class="card mb-3 mt-3">
                    <div class="card-header bg-primary text-white">
                        <h5 class="card-title mb-0">
                            <i class="oi oi-bar-chart me-2"></i>
                            Repository Breakdown
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-sm table-striped">
                                <thead class="table-light">
                                    <tr>
                                        <th>Repository</th>
                                        <th class="text-end">Commands</th>
                                        <th>Percentage</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var repo in CommandsBreakdown)
                                    {
                                        var percentage = TotalCommands > 0 ? (repo.CommandCount * 100.0 / TotalCommands) : 0;
                                        <tr>
                                            <td>
                                                <span class="badge bg-info me-1">@repo.RepositoryName</span>
                                            </td>
                                            <td class="text-end">
                                                <strong>@repo.CommandCount.ToString("N0")</strong>
                                            </td>
                                            <td>
                                                <div class="progress" style="height: 20px;">
                                                    <div class="progress-bar" role="progressbar" style="width: @percentage.ToString("0.1")%" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100">
                                                        @percentage.ToString("0.1")%
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }

        </div>
        <!-- End of Analysis Report Tab -->
    </div>
    <!-- End of Tab Content -->
<!-- End of Main Container -->
</div>

<script>
// Custom access key handler for Show Full Cards checkbox
// Blazor bind can interfere with HTML accesskey, so we handle Alt+C manually
document.addEventListener('keydown', function(event) {
    // Check for Alt+C (keyCode 67 is 'C')
    if (event.altKey && (event.key === 'c' || event.key === 'C') && !event.shiftKey && !event.ctrlKey) {
        event.preventDefault();
        const showFullCardsCheckbox = document.getElementById('showFullCardsToggle');
        if (showFullCardsCheckbox && !showFullCardsCheckbox.disabled) {
            // Toggle the checkbox
            showFullCardsCheckbox.checked = !showFullCardsCheckbox.checked;
            // Trigger the change event to notify Blazor
            const changeEvent = new Event('change', { bubbles: true });
            showFullCardsCheckbox.dispatchEvent(changeEvent);
        }
    }
});
</script>

<script src="/js/random-command-display.js"></script>

@code {
    // All logic is in the code-behind file (partial class)
}

@* Reusable selection modal instance (populated by code-behind) *@
<SelectionModal @ref="_selectionModal" Title="@SelectionModalTitle" Items="@SelectionModalItems" OnSelected="OnModalSelected" />
}
