@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime

<div id="script-card-container-@CardId"></div>

@code {
    [Parameter] public string Title { get; set; } = "Script";
    [Parameter] public string[] Lines { get; set; } = new string[8];
    private string CardId = Guid.NewGuid().ToString("N");

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("import", "/js/ScriptCard.js");
            var js = $"setTimeout(function() {{ if (window.ScriptCard) {{ ScriptCard.render({{ title: '{Title.Replace("'", "\\'")}', lines: {System.Text.Json.JsonSerializer.Serialize(Lines)} }}, document.getElementById('script-card-container-{CardId}')); }} }}, 100);";
            await JSRuntime.InvokeVoidAsync("eval", js);
        }
    }
}
